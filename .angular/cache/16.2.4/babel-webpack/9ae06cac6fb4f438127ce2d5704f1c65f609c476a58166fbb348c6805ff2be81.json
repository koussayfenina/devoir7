{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ProduitService {\n  constructor() {\n    this.produits = [{\n      idProduit: 1,\n      nomProduit: \"PC Asus\",\n      prixProduit: 3000.600,\n      dateCreation: new Date(\"01/14/2811\")\n    }, {\n      idProduit: 2,\n      nomProduit: \"Imprimante Epson\",\n      prixProduit: 450,\n      dateCreation: new Date(\"12/17/2018\")\n    }, {\n      idProduit: 3,\n      nomProduit: \"Tablette Samsung\",\n      prixProduit: 900.123,\n      dateCreation: new Date(\"02/20/2020\")\n    }];\n  }\n  listeProduits() {\n    return this.produits;\n  }\n  ajouterProduit(prod) {\n    this.produits.push(prod);\n  }\n  supprimerProduit(prod) {\n    //supprimer le produit prod du tableau produits\n    const index = this.produits.indexOf(prod, 0);\n    if (index > -1) {\n      this.produits.splice(index, 1);\n    }\n    //ou Bien\n    /* this.produits.forEach((cur, index) => {\n    if(prod.idProduit === cur.idProduit) {\n    this.produits.splice(index, 1);\n    }\n    }); */\n  }\n\n  consulterProduit(id) {\n    return this.produits.find(p => p.idProduit == id);\n  }\n  trierProduits() {\n    this.produits = this.produits.sort((n1, n2) => {\n      if (n1.idProduit > idProduit) {\n        return 1;\n      }\n      if (n1.idProduit < n2.idProduit) {\n        return -1;\n      }\n      return 0;\n    });\n  }\n  updateProduit(p) {\n    // console.log(p);\n    this.supprimerProduit(p);\n    this.ajouterProduit(p);\n    this.trierProduits();\n  }\n  static #_ = this.ɵfac = function ProduitService_Factory(t) {\n    return new (t || ProduitService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProduitService,\n    factory: ProduitService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ProduitService","constructor","produits","idProduit","nomProduit","prixProduit","dateCreation","Date","listeProduits","ajouterProduit","prod","push","supprimerProduit","index","indexOf","splice","consulterProduit","id","find","p","trierProduits","sort","n1","n2","updateProduit","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\betech.tn\\Desktop\\dsi\\angular\\MesProduits\\src\\app\\services\\produit.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Produit } from '../model/produit.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProduitService {\n\n  produits : Produit[];\n  produit! : Produit;\n\n  constructor() { \n    this.produits = [\n      {idProduit : 1, nomProduit : \"PC Asus\", prixProduit : 3000.600, dateCreation : new Date(\"01/14/2811\")},\n      {idProduit : 2, nomProduit : \"Imprimante Epson\", prixProduit : 450, dateCreation : new Date(\"12/17/2018\")},\n      {idProduit : 3, nomProduit :\"Tablette Samsung\", prixProduit : 900.123, dateCreation : new Date(\"02/20/2020\")}\n    ];\n  }\n\n  listeProduits():Produit[] {\n    return this.produits;\n  }\n  \n  ajouterProduit( prod: Produit){\n    this.produits.push(prod);\n  }\n\n  supprimerProduit( prod: Produit){\n    //supprimer le produit prod du tableau produits\n    const index = this.produits.indexOf(prod, 0);\n    if (index > -1) {\n    this.produits.splice(index, 1);\n    }\n    //ou Bien\n    /* this.produits.forEach((cur, index) => {\n    if(prod.idProduit === cur.idProduit) {\n    this.produits.splice(index, 1);\n    }\n    }); */\n    }\n\n\n    consulterProduit(id:number): Produit{\n      return this.produits.find(p => p.idProduit == id)!;\n          \n      }\n\n      trierProduits(){\n        this.produits = this.produits.sort((n1,n2) => {\n          if (n1.idProduit > idProduit) {\n              return 1;\n          }\n         if (n1.idProduit < n2.idProduit) {\n              return -1;\n          }\n        return 0;\n      });\n      }\n  \n\n      updateProduit(p:Produit)\n      {\n      // console.log(p);\n        this.supprimerProduit(p);\n        this.ajouterProduit(p);\n        this.trierProduits();\n      }\n        \n}"],"mappings":";AAMA,OAAM,MAAOA,cAAc;EAKzBC,YAAA;IACE,IAAI,CAACC,QAAQ,GAAG,CACd;MAACC,SAAS,EAAG,CAAC;MAAEC,UAAU,EAAG,SAAS;MAAEC,WAAW,EAAG,QAAQ;MAAEC,YAAY,EAAG,IAAIC,IAAI,CAAC,YAAY;IAAC,CAAC,EACtG;MAACJ,SAAS,EAAG,CAAC;MAAEC,UAAU,EAAG,kBAAkB;MAAEC,WAAW,EAAG,GAAG;MAAEC,YAAY,EAAG,IAAIC,IAAI,CAAC,YAAY;IAAC,CAAC,EAC1G;MAACJ,SAAS,EAAG,CAAC;MAAEC,UAAU,EAAE,kBAAkB;MAAEC,WAAW,EAAG,OAAO;MAAEC,YAAY,EAAG,IAAIC,IAAI,CAAC,YAAY;IAAC,CAAC,CAC9G;EACH;EAEAC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACN,QAAQ;EACtB;EAEAO,cAAcA,CAAEC,IAAa;IAC3B,IAAI,CAACR,QAAQ,CAACS,IAAI,CAACD,IAAI,CAAC;EAC1B;EAEAE,gBAAgBA,CAAEF,IAAa;IAC7B;IACA,MAAMG,KAAK,GAAG,IAAI,CAACX,QAAQ,CAACY,OAAO,CAACJ,IAAI,EAAE,CAAC,CAAC;IAC5C,IAAIG,KAAK,GAAG,CAAC,CAAC,EAAE;MAChB,IAAI,CAACX,QAAQ,CAACa,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;;IAE9B;IACA;;;;;EAKA;;EAGAG,gBAAgBA,CAACC,EAAS;IACxB,OAAO,IAAI,CAACf,QAAQ,CAACgB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChB,SAAS,IAAIc,EAAE,CAAE;EAElD;EAEAG,aAAaA,CAAA;IACX,IAAI,CAAClB,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACmB,IAAI,CAAC,CAACC,EAAE,EAACC,EAAE,KAAI;MAC3C,IAAID,EAAE,CAACnB,SAAS,GAAGA,SAAS,EAAE;QAC1B,OAAO,CAAC;;MAEb,IAAImB,EAAE,CAACnB,SAAS,GAAGoB,EAAE,CAACpB,SAAS,EAAE;QAC5B,OAAO,CAAC,CAAC;;MAEf,OAAO,CAAC;IACV,CAAC,CAAC;EACF;EAGAqB,aAAaA,CAACL,CAAS;IAEvB;IACE,IAAI,CAACP,gBAAgB,CAACO,CAAC,CAAC;IACxB,IAAI,CAACV,cAAc,CAACU,CAAC,CAAC;IACtB,IAAI,CAACC,aAAa,EAAE;EACtB;EAAC,QAAAK,CAAA,G;qBA5DMzB,cAAc;EAAA;EAAA,QAAA0B,EAAA,G;WAAd1B,cAAc;IAAA2B,OAAA,EAAd3B,cAAc,CAAA4B,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}