{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class ProduitService {\n  constructor(http) {\n    // this.categories = [ {idCat : 1, nomCat : \"PC\"},\n    //                     {idCat : 2, nomCat : \"Imprimante\"}];\n    this.http = http;\n    // produits : Produit[];\n    // produit! : Produit;\n    // categories! : Categorie[];\n    this.apiURL = 'http://localhost:8080/produits/api';\n    /* this.produits = [\n      { idProduit : 1, nomProduit : \"PC Asus\", prixProduit : 3000.600, dateCreation : new Date(\"01/14/2011\"), categorie : {idCat : 1, nomCat : \"PC\"}},\n      { idProduit : 2, nomProduit : \"Imprimante Epson\", prixProduit : 450, dateCreation : new Date(\"12/17/2010\"), categorie : {idCat : 2, nomCat : \"Imprimante\"}},\n      { idProduit : 3, nomProduit :\"Tablette Samsung\", prixProduit : 900.123, dateCreation : new Date(\"02/20/2020\"),categorie : {idCat : 1, nomCat : \"PC\"}}\n    ]; */\n  }\n  /* listeProduits():Produit[] {\n    return this.produits;\n  } */\n  listeProduit() {\n    return this.http.get(this.apiURL);\n  }\n  /* ajouterProduit( prod: Produit){\n    this.produits.push(prod);\n  } */\n  ajouterProduit(prod) {\n    return this.http.post(this.apiURL, prod, httpOptions);\n  }\n  /* supprimerProduit( prod: Produit){\n    //supprimer le produit prod du tableau produits\n    const index = this.produits.indexOf(prod, 0);\n    if (index > -1) {\n    this.produits.splice(index, 1);\n    }\n    //ou Bien\n    /* this.produits.forEach((cur, index) => {\n    if(prod.idProduit === cur.idProduit) {\n    this.produits.splice(index, 1);\n    }\n    }); */\n  supprimerProduit(id) {\n    const url = `${this.apiURL}/${id}`;\n    return this.http.delete(url, httpOptions);\n  }\n  consulterProduit(id) {\n    return this.produits.find(p => p.idProduit == id);\n  }\n  trierProduits() {\n    this.produits = this.produits.sort((n1, n2) => {\n      if (n1.idProduit > n2.idProduit) {\n        return 1;\n      }\n      if (n1.idProduit < n2.idProduit) {\n        return -1;\n      }\n      return 0;\n    });\n  }\n  updateProduit(p) {\n    // console.log(p);\n    this.supprimerProduit(p);\n    this.ajouterProduit(p);\n    this.trierProduits();\n  }\n  static #_ = this.ɵfac = function ProduitService_Factory(t) {\n    return new (t || ProduitService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProduitService,\n    factory: ProduitService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","httpOptions","headers","ProduitService","constructor","http","apiURL","listeProduit","get","ajouterProduit","prod","post","supprimerProduit","id","url","delete","consulterProduit","produits","find","p","idProduit","trierProduits","sort","n1","n2","updateProduit","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\betech.tn\\Desktop\\dsi\\angular\\MesProduits\\src\\app\\services\\produit.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Produit } from '../model/produit.model';\n// import { Categorie } from '../model/categorie.model';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nconst httpOptions = {\n  headers: new HttpHeaders( {'Content-Type': 'application/json'} )\n};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProduitService {\n\n  // produits : Produit[];\n  // produit! : Produit;\n  // categories! : Categorie[];\n\n  apiURL: string = 'http://localhost:8080/produits/api';\n\n  constructor(private http : HttpClient) { \n          \n    // this.categories = [ {idCat : 1, nomCat : \"PC\"},\n    //                     {idCat : 2, nomCat : \"Imprimante\"}];\n\n    /* this.produits = [\n      { idProduit : 1, nomProduit : \"PC Asus\", prixProduit : 3000.600, dateCreation : new Date(\"01/14/2011\"), categorie : {idCat : 1, nomCat : \"PC\"}},\n      { idProduit : 2, nomProduit : \"Imprimante Epson\", prixProduit : 450, dateCreation : new Date(\"12/17/2010\"), categorie : {idCat : 2, nomCat : \"Imprimante\"}},\n      { idProduit : 3, nomProduit :\"Tablette Samsung\", prixProduit : 900.123, dateCreation : new Date(\"02/20/2020\"),categorie : {idCat : 1, nomCat : \"PC\"}}\n    ]; */\n  }\n\n  /* listeProduits():Produit[] {\n    return this.produits;\n  } */\n\n  listeProduit(): Observable<Produit[]>{\n    return this.http.get<Produit[]>(this.apiURL);\n  }\n  \n  /* ajouterProduit( prod: Produit){\n    this.produits.push(prod);\n  } */\n\n  ajouterProduit( prod: Produit):Observable<Produit>{\n    return this.http.post<Produit>(this.apiURL, prod, httpOptions);\n  }\n    \n\n  /* supprimerProduit( prod: Produit){\n    //supprimer le produit prod du tableau produits\n    const index = this.produits.indexOf(prod, 0);\n    if (index > -1) {\n    this.produits.splice(index, 1);\n    }\n    //ou Bien\n    /* this.produits.forEach((cur, index) => {\n    if(prod.idProduit === cur.idProduit) {\n    this.produits.splice(index, 1);\n    }\n    }); */\n\n\n    supprimerProduit(id : number) {\n      const url = `${this.apiURL}/${id}`;\n      return this.http.delete(url, httpOptions);\n    }\n\n\n    consulterProduit(id:number): Produit{\n      return this.produits.find(p => p.idProduit == id)!;\n          \n      }\n\n      trierProduits(){\n        this.produits = this.produits.sort((n1,n2) => {\n          if (n1.idProduit > n2.idProduit) {\n              return 1;\n          }\n         if (n1.idProduit < n2.idProduit) {\n              return -1;\n          }\n        return 0;\n      });\n      }\n  \n\n      updateProduit(p:Produit)\n      {\n      // console.log(p);\n        this.supprimerProduit(p);\n        this.ajouterProduit(p);\n        this.trierProduits();\n      }\n\n      // listeCategories():Categorie[] {\n      //   return this.categories;\n      // }\n        \n      // consulterCategorie(id:number): Categorie{\n      //   return this.categories.find(cat => cat.idCat == id)!;\n      // }\n}"],"mappings":"AAIA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAE9D,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIF,WAAW,CAAE;IAAC,cAAc,EAAE;EAAkB,CAAC;CAC/D;AAMD,OAAM,MAAOG,cAAc;EAQzBC,YAAoBC,IAAiB;IAEnC;IACA;IAHkB,KAAAA,IAAI,GAAJA,IAAI;IANxB;IACA;IACA;IAEA,KAAAC,MAAM,GAAW,oCAAoC;IAOnD;;;;;EAKF;EAEA;;;EAIAC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,MAAM,CAAC;EAC9C;EAEA;;;EAIAG,cAAcA,CAAEC,IAAa;IAC3B,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAU,IAAI,CAACL,MAAM,EAAEI,IAAI,EAAET,WAAW,CAAC;EAChE;EAGA;;;;;;;;;;;;EAcEW,gBAAgBA,CAACC,EAAW;IAC1B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACR,MAAM,IAAIO,EAAE,EAAE;IAClC,OAAO,IAAI,CAACR,IAAI,CAACU,MAAM,CAACD,GAAG,EAAEb,WAAW,CAAC;EAC3C;EAGAe,gBAAgBA,CAACH,EAAS;IACxB,OAAO,IAAI,CAACI,QAAQ,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,SAAS,IAAIP,EAAE,CAAE;EAElD;EAEAQ,aAAaA,CAAA;IACX,IAAI,CAACJ,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACK,IAAI,CAAC,CAACC,EAAE,EAACC,EAAE,KAAI;MAC3C,IAAID,EAAE,CAACH,SAAS,GAAGI,EAAE,CAACJ,SAAS,EAAE;QAC7B,OAAO,CAAC;;MAEb,IAAIG,EAAE,CAACH,SAAS,GAAGI,EAAE,CAACJ,SAAS,EAAE;QAC5B,OAAO,CAAC,CAAC;;MAEf,OAAO,CAAC;IACV,CAAC,CAAC;EACF;EAGAK,aAAaA,CAACN,CAAS;IAEvB;IACE,IAAI,CAACP,gBAAgB,CAACO,CAAC,CAAC;IACxB,IAAI,CAACV,cAAc,CAACU,CAAC,CAAC;IACtB,IAAI,CAACE,aAAa,EAAE;EACtB;EAAC,QAAAK,CAAA,G;qBAjFMvB,cAAc,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAd5B,cAAc;IAAA6B,OAAA,EAAd7B,cAAc,CAAA8B,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}